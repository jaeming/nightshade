{"version":3,"file":"bundle.js","sources":["../src/lib/template_parse.ts","../src/lib/builder.ts","../src/lib/reflection.ts","../test.reflect","../src/main.js"],"sourcesContent":["// TODO:\n// Handle self-closing tags (of both variations: \"/>\" and \">\")\n// add unique ID\n// add isReflected key (eg: \"{msg}\")\n// add attributes\n//   detect special events/directives, eg:\n//     onclick='handleClick', model='msg', if='foo===bar', each='items as item'\n// track dependencies so we know what element to re-render when state changes\n\nenum Bracket {\n  Open = '<',\n  End = '>',\n  Closing = '/'\n}\n\nconst BRACKETS = [Bracket.Open, Bracket.End, Bracket.Closing]\n\nenum TagState {\n  Opening = 'Opening',\n  Attributes = 'Attributes',\n  Opened = 'Opened',\n  Closing = 'Closing',\n  Closed = 'Closed'\n}\n\nconst VOID_ELEMENTS = [\n  'img',\n  'br',\n  'input',\n  'area',\n  'base',\n  'col',\n  'embed',\n  'hr',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n\nexport class TemplateParse {\n  nodes = []\n  template = ''\n  buffer = ''\n  currentNode = null\n\n  constructor (template) {\n    this.template = template\n    this.parse()\n  }\n\n  get isOpening () {\n    return this.currentNode.state === TagState.Opening\n  }\n\n  get isOpened () {\n    return this.currentNode.state === TagState.Opened\n  }\n\n  get isAttributes () {\n    return this.currentNode.state === TagState.Attributes\n  }\n\n  get isClosing () {\n    return this.currentNode.state === TagState.Closing\n  }\n\n  get isSelfClosing () {\n    return VOID_ELEMENTS.includes(this.currentNode.tag)\n  }\n\n  parse () {\n    for (let i = 0; i < this.template.length; i++) {\n      this.buffer = this.template[i]\n      this.process()\n    }\n  }\n\n  process () {\n    if (BRACKETS.includes(this.buffer as Bracket)) {\n      return this.setBracketState()\n    }\n    if (this.isOpening) this.setTag()\n    if (this.isAttributes) this.setAttributes()\n    if (this.isOpened) this.setTextNode()\n  }\n\n  setBracketState () {\n    if (this.buffer === Bracket.Open) this.openTag()\n    if (this.buffer === Bracket.Closing) this.closingTag()\n    if (this.buffer === Bracket.End) this.endTag()\n  }\n\n  setTag () {\n    if (this.buffer === ' ') {\n      this.setState(TagState.Attributes)\n      this.setAttributes()\n    } else {\n      this.currentNode.tag += this.buffer\n    }\n  }\n\n  setTextNode () {\n    if (this.currentNode.tag === 'text') {\n      // append to current text node\n      this.currentNode.content += this.buffer.replace('\\n', '')\n    } else {\n      this.setChild({ asTextNode: true })\n    }\n  }\n\n  setAttributes () {\n    if (!this.attributes) {\n      this.currentNode.attributes = [{ statement: '', key: '', value: '' }]\n    }\n    let { statement, key, value } = this.currentAttribute\n    let finishAttr = false\n    statement += this.buffer\n\n    if (statement === ' ') return // ignore space seperator\n    if (this.buffer === '=') return this.updateCurrentAttr({ statement }) // update and move on to key\n\n    const setValue = () => {\n      const index = statement.indexOf('=') + 1\n      const isQuote = this.buffer === statement[index]\n      const isClosingQuote = statement.length - 1 > index\n      if (isQuote && isClosingQuote) {\n        finishAttr = true\n      } else {\n        value += this.buffer\n      }\n    }\n    const setKey = () => {\n      if (this.buffer === ' ') {\n        // no-assignment attribute\n        statement = key\n        finishAttr = true\n      } else {\n        const keyFinished = this.buffer === \"'\" || this.buffer === '\"'\n        if (!keyFinished) key += this.buffer\n      }\n    }\n\n    statement.includes('=') ? setValue() : setKey()\n    this.updateCurrentAttr({ statement, key, value })\n\n    if (finishAttr) {\n      value = value.replace(/\"/g, '') // remove escaped quotes\n      this.updateCurrentAttr({ value })\n      this.currentNode.attributes.push({ statement: '', key: '', value: '' })\n    }\n  }\n\n  get attributes () {\n    return this.currentNode.attributes\n  }\n\n  get currentAttribute () {\n    if (!this.attributes) return\n    return this.attributes[this.attributes.length - 1]\n  }\n\n  removeEmptyAttrs () {\n    if (this.currentAttribute?.statement === '') {\n      this.currentNode.attributes.splice(this.currentNode.attributes.length - 1)\n    }\n  }\n\n  updateCurrentAttr (val) {\n    this.attributes[this.attributes.length - 1] = {\n      ...this.attributes[this.attributes.length - 1],\n      ...val\n    }\n  }\n\n  openTag () {\n    if (!this.currentNode) {\n      this.setRoot()\n    } else if (this.isOpened) {\n      if (this.currentNode.tag === 'text') this.closeTextNode()\n      this.setChild({})\n    }\n  }\n\n  endTag () {\n    if ((this.isOpening || this.isAttributes) && !this.isSelfClosing) {\n      this.setState(TagState.Opened)\n      this.removeEmptyAttrs()\n      this.nodes.push(this.currentNode)\n    }\n    // refactor dupe logic\n    if ((this.isOpening || this.isAttributes) && this.isSelfClosing) {\n      this.setSelfClosing()\n      this.currentNode = this.findOpenParent(this.currentNode)\n    }\n    if (this.isClosing) {\n      this.setState(TagState.Closed)\n      this.currentNode = this.findOpenParent(this.currentNode)\n    }\n  }\n\n  closingTag () {\n    if ((this.isOpening || this.isAttributes) && this.isSelfClosing) {\n      this.setSelfClosing()\n    }\n    if (this.isOpening && !this.isSelfClosing) {\n      // discard current node since it was just a closing tag\n      this.currentNode = this.currentNode.parent // go back to prev node\n    }\n    this.setState(TagState.Closing)\n  }\n\n  findOpenParent (node) {\n    // find closest open parent\n    const parent = node.parent\n    // if (!parent) return node // no more parents open\n    return parent.state.Closed ? this.findOpenParent(node) : parent\n  }\n\n  closeTextNode () {\n    this.setState(TagState.Closed)\n    if (this.currentNode.content.replace(/ /g, '').length) {\n      this.currentNode.content = this.currentNode.content.trim()\n      this.nodes.push(this.currentNode)\n    }\n    this.currentNode = this.currentNode.parent\n  }\n\n  setSelfClosing () {\n    this.setState(TagState.Closed)\n    this.removeEmptyAttrs()\n    this.nodes.push(this.currentNode)\n  }\n\n  setState (state: TagState) {\n    this.currentNode.state = state\n  }\n\n  setRoot () {\n    this.currentNode = { tag: '' }\n    this.currentNode.parent = { tag: 'ROOT', state: TagState.Opened }\n    this.setState(TagState.Opening)\n  }\n\n  setChild ({ asTextNode }: { asTextNode?: boolean }) {\n    const parent = this.currentNode\n    this.currentNode = asTextNode\n      ? {\n          state: TagState.Opened,\n          tag: 'text',\n          content: this.buffer.replace('\\n', ''),\n          parent\n        }\n      : { state: TagState.Opening, tag: '', parent }\n  }\n}\n","const uid = () =>\n  Date.now().toString(36) +\n  Math.random()\n    .toString(36)\n    .substr(2)\n\nexport class Builder {\n  el = null\n  constructor (public node, public component, public root, public handlers) {\n    this.create()\n  }\n\n  create () {\n    if (this.node.tag === 'text') {\n      const content = this.textContent(this.node.content)\n      this.el = document.createTextNode(content)\n      this.append()\n    } else {\n      this.el = document.createElement(this.node.tag)\n      this.setRef()\n      this.setAttributes()\n      this.append()\n    }\n  }\n\n  setAttributes () {\n    this.node?.attributes?.forEach(attr => {\n      const bindings = this.bindMatches(attr.value)\n      const isHandler = Object.values(this.handlers).includes(attr.key)\n      if (isHandler && bindings) return this.setHandler(attr)\n      if (bindings) return this.setAttrBinding(attr, bindings)\n      this.el.setAttribute(attr.key, attr.value)\n    })\n  }\n\n  setAttrBinding (attr, bindings) {\n    const val = this.unwrapMatch(bindings[0])\n    this.el.setAttribute(attr.key, this.component[val])\n  }\n\n  setHandler (attr) {\n    const [handlerType, handler] = this.deriveHandler(attr)\n    this.el.addEventListener(handlerType, handler, false)\n  }\n\n  deriveHandler ({ key, value }) {\n    const val = this.unwrapMatch(value)\n    const handler = this.component[val].bind(this.component)\n    const handlerIndex = Object.values(this.handlers).findIndex(i => i === key)\n    const handlerType = Object.keys(this.handlers)[handlerIndex]\n    return [handlerType, handler]\n  }\n\n  append () {\n    if (this.node.parent?.id) {\n      const parentEl = document.querySelector(\n        `[data-ref=\"${this.node.parent.id}\"]`\n      )\n      parentEl.appendChild(this.el)\n    } else if (this.root) {\n      this.root.appendChild(this.el)\n    }\n  }\n\n  textContent (content) {\n    const bindings = this.bindMatches(content)\n    if (!bindings) return content\n    bindings.forEach(bound => {\n      content = content.replace(bound, this.deriveBound(bound))\n    })\n    return content\n  }\n\n  deriveBound (bound) {\n    const val = this.unwrapMatch(bound)\n    return this.component.hasOwnProperty(val)\n      ? this.component[val]\n      : this.evaluate(val)\n  }\n\n  evaluate (expression) {\n    return new Function('return ' + expression)()\n  }\n\n  bindMatches (str: string) {\n    // returns array of matches including the braces\n    return str.match(/\\{([^}]+)\\}/g)\n  }\n\n  unwrapMatch (str: string) {\n    // unwraps from curly braces\n    return str.replace(/[{}]/g, '')\n  }\n\n  setRef () {\n    this.node.id = uid()\n    this.el.setAttribute('data-ref', this.node.id)\n  }\n}\n","import { TemplateParse } from './template_parse'\nimport { Builder } from './builder'\n\nexport enum Handler {\n  click = 'click',\n  if = 'if',\n  input = 'input',\n  model = 'model'\n}\n\nexport default class Reflection {\n  root = null\n  nodes = []\n  component = null\n  proxy = null\n  handlers = { ...Handler }\n\n  mount (Component, element, options = {}) {\n    this.setOptions(options)\n    this.root = document.querySelector(element)\n    this.component = new Component()\n    this.nodes = new TemplateParse(this.component.template).nodes\n    this.reflect()\n    this.nodes.forEach(n => this.build(n))\n  }\n\n  reflect () {\n    const update = this.update.bind(this)\n    this.proxy = new Proxy(this.component, {\n      set (obj, prop, val, receiver) {\n        obj[prop] = val\n        update(obj, prop, receiver)\n        return true\n      }\n    })\n  }\n\n  update (obj, prop, receiver, val) {\n    // todo\n    console.log(\n      `prop: ${String(prop)} wants to update to value: ${receiver.count}`\n    )\n  }\n\n  build (node) {\n    new Builder(node, this.proxy, this.root, this.handlers)\n  }\n\n  setOptions (opts) {\n    if (opts.handlers) this.handlers = { ...Handler, ...opts.handlers }\n  }\n}\n","\n  const foo = 'bar'\n\n  export default class Foo {\n  template = \"<main>\\n  Main element here...\\n  <p id=\\\"main-text\\\" class=\\\"foo bar moar\\\" small data-role=\\\"test\\\">\\n    a paragraph...\\n  </p>\\n  <h2 class=\\\"{style}\\\">the count is {count}</h2>\\n  <button click=\\\"{increment}\\\">increment count</button>\\n  <h3>{msg}, {question}... again: {msg}</h3>\\n  <p>lets evaluate and expression:</p>\\n  <p>2 + 2 = {2 + 2}</p>\\n  <p>Should I stay or should I go? {true ? \\\"go\\\" : \\\"stay\\\"}</p>\\n  <br />\\n  <div large>\\n    <ul>\\n      <li>\\n        item one\\n        <input type=\\\"password\\\" placeholder=\\\"enter a password\\\" />\\n      </li>\\n      <li>item two</li>\\n    </ul>\\n  </div>\\n  more main here!\\n</main>\\n\\n\\n\"\n    msg = 'Hello World!'\n    question = 'How are you tonight?'\n    count = 0\n    style = 'counter-class'\n\n    increment () {\n      console.log('increment')\n      this.count++\n    }\n\n    sayFoo () {\n      return foo\n    }\n  }\n","import Reflection from './lib/reflection'\nimport Test from './test.reflect'\n\nconst app = new Reflection()\n\napp.mount(Test, '#app')\n"],"names":["Test"],"mappings":"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"}