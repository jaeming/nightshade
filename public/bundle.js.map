{"version":3,"file":"bundle.js","sources":["../src/lib/template_parse.ts","../src/lib/types.ts","../src/lib/builder.ts","../src/lib/reflection.ts","../test.reflect","../src/main.js"],"sourcesContent":["// TODO:\n// Handle self-closing tags (of both variations: \"/>\" and \">\")\n// add unique ID\n// add isReflected key (eg: \"{msg}\")\n// add attributes\n//   detect special events/directives, eg:\n//     onclick='handleClick', model='msg', if='foo===bar', each='items as item'\n// track dependencies so we know what element to re-render when state changes\n\nenum Bracket {\n  Open = '<',\n  End = '>',\n  Closing = '/'\n}\n\nconst BRACKETS = [Bracket.Open, Bracket.End, Bracket.Closing]\n\nenum TagState {\n  Opening = 'Opening',\n  Attributes = 'Attributes',\n  Opened = 'Opened',\n  Closing = 'Closing',\n  Closed = 'Closed'\n}\n\nconst VOID_ELEMENTS = [\n  'img',\n  'br',\n  'input',\n  'area',\n  'base',\n  'col',\n  'embed',\n  'hr',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n\nexport class TemplateParse {\n  nodes = []\n  template = ''\n  buffer = ''\n  currentNode = null\n\n  constructor (template) {\n    this.template = template\n    this.parse()\n  }\n\n  get isOpening () {\n    return this.currentNode.state === TagState.Opening\n  }\n\n  get isOpened () {\n    return this.currentNode.state === TagState.Opened\n  }\n\n  get isAttributes () {\n    return this.currentNode.state === TagState.Attributes\n  }\n\n  get isClosing () {\n    return this.currentNode.state === TagState.Closing\n  }\n\n  get isSelfClosing () {\n    return VOID_ELEMENTS.includes(this.currentNode.tag)\n  }\n\n  parse () {\n    for (let i = 0; i < this.template.length; i++) {\n      this.buffer = this.template[i]\n      this.process()\n    }\n  }\n\n  process () {\n    if (BRACKETS.includes(this.buffer as Bracket)) {\n      return this.setBracketState()\n    }\n    if (this.isOpening) this.setTag()\n    if (this.isAttributes) this.setAttributes()\n    if (this.isOpened) this.setTextNode()\n  }\n\n  setBracketState () {\n    if (this.buffer === Bracket.Open) this.openTag()\n    if (this.buffer === Bracket.Closing) this.closingTag()\n    if (this.buffer === Bracket.End) this.endTag()\n  }\n\n  setTag () {\n    if (this.buffer === ' ') {\n      this.setState(TagState.Attributes)\n      this.setAttributes()\n    } else {\n      this.currentNode.tag += this.buffer\n    }\n  }\n\n  setTextNode () {\n    if (this.currentNode.tag === 'text') {\n      // append to current text node\n      this.currentNode.content += this.buffer.replace('\\n', '')\n    } else {\n      this.setChild({ asTextNode: true })\n    }\n  }\n\n  setAttributes () {\n    if (!this.attributes) {\n      this.currentNode.attributes = [{ statement: '', key: '', value: '' }]\n    }\n    let { statement, key, value } = this.currentAttribute\n    let finishAttr = false\n    statement += this.buffer\n\n    if (statement === ' ') return // ignore space seperator\n    if (this.buffer === '=') return this.updateCurrentAttr({ statement }) // update and move on to key\n\n    const setValue = () => {\n      const index = statement.indexOf('=') + 1\n      const isQuote = this.buffer === statement[index]\n      const isClosingQuote = statement.length - 1 > index\n      if (isQuote && isClosingQuote) {\n        finishAttr = true\n      } else {\n        value += this.buffer\n      }\n    }\n    const setKey = () => {\n      if (this.buffer === ' ') {\n        // no-assignment attribute\n        statement = key\n        finishAttr = true\n      } else {\n        const keyFinished = this.buffer === \"'\" || this.buffer === '\"'\n        if (!keyFinished) key += this.buffer\n      }\n    }\n\n    statement.includes('=') ? setValue() : setKey()\n    this.updateCurrentAttr({ statement, key, value })\n\n    if (finishAttr) {\n      value = value.replace(/\"/g, '') // remove escaped quotes\n      this.updateCurrentAttr({ value })\n      this.currentNode.attributes.push({ statement: '', key: '', value: '' })\n    }\n  }\n\n  get attributes () {\n    return this.currentNode.attributes\n  }\n\n  get currentAttribute () {\n    if (!this.attributes) return\n    return this.attributes[this.attributes.length - 1]\n  }\n\n  removeEmptyAttrs () {\n    if (this.currentAttribute?.statement === '') {\n      this.currentNode.attributes.splice(this.currentNode.attributes.length - 1)\n    }\n  }\n\n  updateCurrentAttr (val) {\n    this.attributes[this.attributes.length - 1] = {\n      ...this.attributes[this.attributes.length - 1],\n      ...val\n    }\n  }\n\n  openTag () {\n    if (!this.currentNode) {\n      this.setRoot()\n    } else if (this.isOpened) {\n      if (this.currentNode.tag === 'text') this.closeTextNode()\n      this.setChild({})\n    }\n  }\n\n  endTag () {\n    if ((this.isOpening || this.isAttributes) && !this.isSelfClosing) {\n      this.setState(TagState.Opened)\n      this.removeEmptyAttrs()\n      this.nodes.push(this.currentNode)\n    }\n    // refactor dupe logic\n    if ((this.isOpening || this.isAttributes) && this.isSelfClosing) {\n      this.setSelfClosing()\n      this.currentNode = this.findOpenParent(this.currentNode)\n    }\n    if (this.isClosing) {\n      this.setState(TagState.Closed)\n      this.currentNode = this.findOpenParent(this.currentNode)\n    }\n  }\n\n  closingTag () {\n    if ((this.isOpening || this.isAttributes) && this.isSelfClosing) {\n      this.setSelfClosing()\n    }\n    if (this.isOpening && !this.isSelfClosing) {\n      // discard current node since it was just a closing tag\n      this.currentNode = this.currentNode.parent // go back to prev node\n    }\n    this.setState(TagState.Closing)\n  }\n\n  findOpenParent (node) {\n    // find closest open parent\n    const parent = node.parent\n    // if (!parent) return node // no more parents open\n    return parent.state.Closed ? this.findOpenParent(node) : parent\n  }\n\n  closeTextNode () {\n    this.setState(TagState.Closed)\n    if (this.currentNode.content.replace(/ /g, '').length) {\n      this.currentNode.content = this.currentNode.content.trim()\n      this.nodes.push(this.currentNode)\n    }\n    this.currentNode = this.currentNode.parent\n  }\n\n  setSelfClosing () {\n    this.setState(TagState.Closed)\n    this.removeEmptyAttrs()\n    this.nodes.push(this.currentNode)\n  }\n\n  setState (state: TagState) {\n    this.currentNode.state = state\n  }\n\n  setRoot () {\n    this.currentNode = { tag: '' }\n    this.currentNode.parent = { tag: 'ROOT', state: TagState.Opened }\n    this.setState(TagState.Opening)\n  }\n\n  setChild ({ asTextNode }: { asTextNode?: boolean }) {\n    const parent = this.currentNode\n    this.currentNode = asTextNode\n      ? {\n          state: TagState.Opened,\n          tag: 'text',\n          content: this.buffer.replace('\\n', ''),\n          parent\n        }\n      : { state: TagState.Opening, tag: '', parent }\n  }\n}\n","const CLICK = 'click'\nconst INPUT = 'input'\nexport const IF = 'if'\nexport const MODEL = 'model'\nexport const EACH = 'each'\n\nexport const HANDLERS = [CLICK, INPUT, IF, MODEL, EACH]\n","import { HANDLERS, EACH } from './types'\n\nconst uid = () =>\n  Date.now().toString(36) +\n  Math.random()\n    .toString(36)\n    .substr(2)\n\ninterface Attribute {\n  key: string\n  value: string\n}\n\nexport class Builder {\n  el = null\n  constructor (\n    public node,\n    public index,\n    public nodes,\n    public component,\n    public root,\n    public options: { update?: boolean; prop?: string } = {}\n  ) {\n    options.update ? this.update() : this.create()\n  }\n\n  create () {\n    this.inherit()\n    this.node.tag === 'text' ? this.createTextNode() : this.createElement()\n    this.append()\n  }\n\n  update () {\n    // todo: deal with if's\n    this.el = document.querySelector(`[data-ref=\"${this.node.id}\"]`)\n    if (this.node.tag === 'text') {\n      this.updateTextNode()\n    } else {\n      this.setAttributes()\n    }\n  }\n\n  createElement () {\n    this.el = document.createElement(this.node.tag)\n    this.setRef()\n    this.setAttributes()\n  }\n\n  createTextNode () {\n    this.el = document.createTextNode(this.interpolatedContent())\n  }\n\n  updateTextNode () {\n    for (let n of this.parentEl.childNodes) {\n      if (n.nodeValue.includes(this.node.interpolatedContent)) {\n        n.nodeValue = this.interpolatedContent()\n      }\n    }\n  }\n\n  interpolatedContent () {\n    const content = this.textContent(this.node.content)\n    this.node.interpolatedContent = content\n    return content\n  }\n\n  setAttributes () {\n    this.node?.attributes?.forEach((attr: Attribute) => {\n      if (HANDLERS.includes(attr.key)) return this.setHandler(attr)\n      const bindings = this.bindMatches(attr.value)\n      if (bindings) return this.setAttrBinding(attr, bindings)\n      this.el.setAttribute(attr.key, attr.value)\n    })\n  }\n\n  setAttrBinding (attr, bindings) {\n    const prop = this.unwrapMatch(bindings[0])\n    this.trackDependency(prop)\n    this.el.setAttribute(attr.key, this.component[prop])\n  }\n\n  setHandler (attr: Attribute) {\n    if (attr.key === EACH) return this.setEach(attr)\n\n    const [handlerType, handler] = this.deriveHandler(attr)\n    this.el.addEventListener(handlerType, handler, false)\n  }\n\n  deriveHandler ({ key, value }) {\n    const val = this.unwrapMatch(value)\n    const handler = this.component[val].bind(this.component)\n    const handlerType = HANDLERS.find(i => i === key)\n    return [handlerType, handler]\n  }\n\n  append () {\n    if (this.node.parent?.id) {\n      this.parentEl.appendChild(this.el)\n    } else if (this.root) {\n      this.root.appendChild(this.el)\n    }\n  }\n\n  textContent (content) {\n    const bindings = this.bindMatches(content)\n    if (!bindings) return content\n    bindings.forEach(bound => {\n      const prop = this.unwrapMatch(bound)\n      this.trackDependency(prop)\n      content = content.replace(bound, this.deriveBound(prop))\n    })\n    return content\n  }\n\n  deriveBound (propOrExpression: string) {\n    return this.component.hasOwnProperty(propOrExpression)\n      ? this.component[propOrExpression]\n      : this.evaluate(propOrExpression)\n  }\n\n  evaluate (expression: string) {\n    return new Function(`return ${expression}`)()\n  }\n\n  bindMatches (str: string) {\n    // returns array of matches including the braces\n    return str.match(/\\{([^}]+)\\}/g)\n  }\n\n  unwrapMatch (str: string) {\n    // unwraps from curly braces\n    return str.replace(/[{}]/g, '')\n  }\n\n  trackDependency (prop: string) {\n    this.node.tracks\n      ? this.node.tracks.add(prop)\n      : (this.node.tracks = new Set([prop]))\n  }\n\n  setRef () {\n    this.node.id = uid()\n    this.el.setAttribute('data-ref', this.node.id)\n  }\n\n  setEach (attr: Attribute) {\n    const val = this.unwrapMatch(attr.value) // for less confusion accept bracewrap or not\n    const [list, item, index] = val.replace(/\\s+/g, '').split(/as|,/)\n    this.node.each = {\n      prop: list,\n      variable: item,\n      indexVar: index,\n      index: 0,\n      root: true\n    }\n    this.trackDependency(list)\n  }\n\n  inherit () {\n    this.inheritEach()\n  }\n\n  inheritEach () {\n    const { each } = this.node.parent\n    if (this.prevNode?.each && !each) {\n      const root = parent => (parent?.each ? root(parent.parent) : parent)\n      const rootEachNode = root(this.prevNode)\n      const eachNodes = this.nodes.slice(\n        this.nodes.findIndex(i => i.id === rootEachNode.id) + 1,\n        this.index\n      )\n\n      eachNodes.forEach((n, i) => {\n        const scopedEach = {\n          [n.each.indexVar]: i + 1,\n          [n.each.variable]: this.component[n.each.prop][i + 1]\n        }\n        const obj = { ...this.component, ...scopedEach }\n        new Builder(n, i + 1, this.nodes, obj, null)\n      })\n\n      // find root each and call build on a slice of nodes representing the each iteration, appending to parent\n      // see if the last each.index was length-1 (&& return if so)\n      // increment the each.indexVar, set the each.variable\n    }\n\n    if (this.node.parent.each) {\n      // const index = each.index + 1\n      this.node.each = { ...each, root: false }\n      Object.assign(this.component, {\n        [each.indexVar]: each.index,\n        [each.variable]: this.component[each.prop][each.index]\n      })\n    }\n  }\n\n  get parentEl () {\n    return document.querySelector(`[data-ref=\"${this.node.parent.id}\"]`)\n  }\n\n  get prevNode () {\n    return this.nodes[this.index - 1]\n  }\n}\n","import { TemplateParse } from './template_parse'\nimport { Builder } from './builder'\n\nexport default class Reflection {\n  root = null\n  nodes = []\n  component = null\n  proxy = null\n\n  mount (Component, element, options = {}) {\n    this.root = document.querySelector(element)\n    this.component = new Component()\n    this.nodes = new TemplateParse(this.component.template).nodes\n    this.reflect()\n    this.nodes.forEach((n, i) => this.build(n, i))\n  }\n\n  reflect () {\n    const update = this.update.bind(this)\n    this.proxy = new Proxy(this.component, {\n      set (obj, prop, val, receiver) {\n        obj[prop] = val\n        update(obj, prop, receiver)\n        return true\n      }\n    })\n  }\n\n  update (prop, receiver) {\n    // todo\n    console.log(\n      `prop: ${String(prop)} wants to update to value: ${receiver[prop]}`\n    )\n    this.nodes\n      .filter(n => n.tracks?.has(prop))\n      .forEach((n, i) => this.build(n, i, { update: true, prop }))\n    // find all elements that track the prop as a dependency and update them\n    // in the case of \"if\" we need to create a new elements, or remove them\n  }\n\n  build (node, index, opts = {}) {\n    new Builder(node, index, this.nodes, this.proxy, this.root, opts)\n  }\n}\n","\n  const foo = 'bar'\n\n  export default class Foo {\n  template = \"<main>\\n  Main element here...\\n  <p id=\\\"main-text\\\" class=\\\"foo bar moar\\\" small data-role=\\\"test\\\">\\n    a paragraph...\\n  </p>\\n  <h2 class=\\\"{style}\\\">the count is {count}</h2>\\n  <button click=\\\"{increment}\\\">increment count</button>\\n  <button click=\\\"{decrement}\\\">decrement count</button>\\n  <h3>{msg}, {question}... again: {msg}</h3>\\n  <div>\\n    <p>lets evaluate and expression:</p>\\n    <p>2 + 2 = {2 + 2}</p>\\n    <p>Should I stay or should I go? {true ? \\\"go\\\" : \\\"stay\\\"}</p>\\n  </div>\\n  <br />\\n  <div large>\\n    <input type=\\\"text\\\" value=\\\"{someText}\\\" input=\\\"{handleInput}\\\" />\\n    <p>this is what you entered: {someText}</p>\\n    <button click=\\\"{clearText}\\\">clear text</button>\\n\\n    <ul>\\n      <li each=\\\"{items as item, index}\\\">no. {index}: {item}</li>\\n    </ul>\\n  </div>\\n  more main here!\\n</main>\\n\\n\\n\"\n    msg = 'Hello World!'\n    question = 'How are you tonight?'\n    count = 0\n    style = 'counter-class'\n    someText = 'test'\n    items = ['foobar', 'yolo', 'fomo']\n\n    increment () {\n      this.count++\n    }\n\n    decrement () {\n      this.count--\n    }\n\n    handleInput (e) {\n      this.someText = e.target.value\n    }\n\n    clearText () {\n      this.someText = ''\n    }\n  }\n","import Reflection from './lib/reflection'\nimport Test from './test.reflect'\n\nconst app = new Reflection()\n\napp.mount(Test, '#app')\n"],"names":["Test"],"mappings":"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"}