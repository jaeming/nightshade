{"version":3,"file":"bundle.js","sources":["../src/lib/utils.ts","../src/lib/types.ts","../src/lib/template_parse.ts","../src/lib/render.ts","../src/lib/router.ts","../src/lib/reflection.ts","../layout.reflect","../home.reflect","../about.reflect","../src/router.js","../src/main.js"],"sourcesContent":["export const uid = () =>\n  Date.now().toString(36) +\n  Math.random()\n    .toString(36)\n    .substr(2)\n","// render\n\nexport const CLICK = 'click'\nconst INPUT = 'input'\nexport const IF = 'if'\nexport const ROUTE = 'route'\nexport const MODEL = 'model'\nexport const EACH = 'each'\n\nexport const HANDLERS = [CLICK, INPUT, MODEL, EACH]\n\nexport const ROUTER = 'Router'\n\nexport interface Options {\n  update?: boolean\n  prop?: string\n}\nexport interface Attribute {\n  key: string\n  value: string\n}\n\n// parser\nexport enum Bracket {\n  Open = '<',\n  End = '>',\n  Closing = '/'\n}\n\nexport const BRACKETS = [Bracket.Open, Bracket.End, Bracket.Closing]\n\nexport enum TagState {\n  Opening = 'Opening',\n  Attributes = 'Attributes',\n  Opened = 'Opened',\n  Closing = 'Closing',\n  Closed = 'Closed',\n  Comment = 'Comment'\n}\n\nexport const VOID_ELEMENTS = [\n  'img',\n  'br',\n  'input',\n  'area',\n  'base',\n  'col',\n  'embed',\n  'hr',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n","import { uid } from './utils'\nimport { TagState, VOID_ELEMENTS, BRACKETS, Bracket } from './types'\n\n// BIG TODO: handle html entities\n\nexport class TemplateParse {\n  nodes = []\n  template = ''\n  buffer = ''\n  currentNode = null\n  index = 0\n\n  constructor (template) {\n    this.template = template\n    this.parse()\n  }\n\n  get prevBuffer () {\n    return this.template[this.index - 1]\n  }\n\n  get nextBuffer () {\n    return this.template[this.index + 1]\n  }\n\n  get isOpening () {\n    return this.currentNode.state === TagState.Opening\n  }\n\n  get isOpened () {\n    return this.currentNode.state === TagState.Opened\n  }\n\n  get isAttributes () {\n    return this.currentNode.state === TagState.Attributes\n  }\n\n  get isClosing () {\n    return this.currentNode?.state === TagState.Closing\n  }\n\n  get isSelfClosing () {\n    return VOID_ELEMENTS.includes(this.currentNode.tag)\n  }\n\n  get isComment () {\n    return this.currentNode?.state === TagState.Comment\n  }\n\n  get isBracket () {\n    if (!BRACKETS.includes(this.buffer as Bracket)) return false\n\n    if (this.buffer === Bracket.Closing)\n      return this.prevBuffer === Bracket.Open || this.nextBuffer === Bracket.End\n\n    return true\n  }\n\n  parse () {\n    for (let i = 0; i < this.template.length; i++) {\n      this.index = i\n      this.buffer = this.template[i]\n      this.process()\n    }\n  }\n\n  process () {\n    if (this.isBracket) return this.setBracketState()\n\n    if (this.isOpening) this.setTag()\n    if (this.isAttributes) this.setAttributes()\n    if (this.isOpened) this.setTextNode()\n  }\n\n  setBracketState () {\n    if (this.buffer === Bracket.Open && !this.isComment) this.openTag()\n    if (this.buffer === Bracket.Closing && !this.isComment) this.closingTag()\n    if (this.buffer === Bracket.End) this.endTag()\n  }\n\n  setTag () {\n    const becomesComment =\n      this.buffer === '!' && this.prevBuffer === Bracket.Open\n    if (becomesComment) return this.setState(TagState.Comment)\n\n    if ([' ', '\\n'].includes(this.buffer)) {\n      this.setState(TagState.Attributes)\n      this.setAttributes()\n    } else {\n      this.currentNode.tag += this.buffer\n    }\n  }\n\n  setTextNode () {\n    if (this.currentNode.tag === 'text') {\n      // append to current text node\n      this.currentNode.content += this.buffer.replace('\\n', '')\n    } else {\n      this.setChild({ asTextNode: true })\n    }\n  }\n\n  setAttributes () {\n    if (!this.attributes) {\n      this.currentNode.attributes = [{ statement: '', key: '', value: '' }]\n    }\n    let { statement, key, value } = this.currentAttribute\n    let finishAttr = false\n    statement += this.buffer\n\n    if ([' ', '\\n'].includes(statement)) return // ignore space seperator\n    if (this.buffer === '=') return this.updateCurrentAttr({ statement }) // update and move on to key\n\n    const setValue = () => {\n      const index = statement.indexOf('=') + 1\n      const isQuote = this.buffer === statement[index]\n      const isClosingQuote = statement.length - 1 > index\n      if (isQuote && isClosingQuote) {\n        finishAttr = true\n      } else {\n        value += this.buffer\n      }\n    }\n    const setKey = () => {\n      if (this.buffer === ' ') {\n        // no-assignment attribute\n        statement = key\n        finishAttr = true\n      } else {\n        const keyFinished = this.buffer === \"'\" || this.buffer === '\"'\n        if (!keyFinished) key += this.buffer\n      }\n    }\n\n    statement.includes('=') ? setValue() : setKey()\n    this.updateCurrentAttr({ statement, key, value })\n\n    if (finishAttr) {\n      value = value.replace(/\"/g, '') // remove escaped quotes\n      this.updateCurrentAttr({ value })\n      this.currentNode.attributes.push({ statement: '', key: '', value: '' })\n    }\n  }\n\n  get attributes () {\n    return this.currentNode.attributes\n  }\n\n  get currentAttribute () {\n    if (!this.attributes) return\n    return this.attributes[this.attributes.length - 1]\n  }\n\n  removeEmptyAttrs () {\n    if (this.currentAttribute?.statement === '') {\n      this.currentNode.attributes.splice(this.currentNode.attributes.length - 1)\n    }\n  }\n\n  updateCurrentAttr (val) {\n    this.attributes[this.attributes.length - 1] = {\n      ...this.attributes[this.attributes.length - 1],\n      ...val\n    }\n  }\n\n  openTag () {\n    if (!this.currentNode) {\n      this.setRoot()\n    } else if (this.isOpened) {\n      if (this.currentNode.tag === 'text') this.closeTextNode()\n      this.setChild({})\n    }\n  }\n\n  endTag () {\n    if ((this.isOpening || this.isAttributes) && !this.isSelfClosing) {\n      this.setState(TagState.Opened)\n      this.removeEmptyAttrs()\n      this.saveNode()\n    }\n    // refactor dupe logic\n    if ((this.isOpening || this.isAttributes) && this.isSelfClosing) {\n      this.setSelfClosing()\n      this.currentNode = this.findOpenParent(this.currentNode)\n    }\n    if (this.isComment) {\n      const closingComment =\n        this.prevBuffer === '-' && this.template[this.index - 2] === '-'\n      if (closingComment) {\n        this.setState(TagState.Closed)\n        this.currentNode = this.findOpenParent(this.currentNode)\n      }\n    }\n    if (this.isClosing) {\n      this.setState(TagState.Closed)\n      this.currentNode = this.findOpenParent(this.currentNode)\n    }\n  }\n\n  closingTag () {\n    if ((this.isOpening || this.isAttributes) && this.isSelfClosing) {\n      this.setSelfClosing()\n    }\n    if (this.isOpening && !this.isSelfClosing) {\n      // discard current node since it was just a closing tag\n      this.currentNode = this.currentNode.parent // go back to prev node\n    }\n    this.setState(TagState.Closing)\n  }\n\n  findOpenParent (node) {\n    // find closest open parent\n    const parent = node.parent\n    // if (!parent) return node // no more parents open\n    return parent.state.Closed ? this.findOpenParent(node) : parent\n  }\n\n  closeTextNode () {\n    this.setState(TagState.Closed)\n    if (this.currentNode.content.replace(/ /g, '').length) {\n      this.currentNode.content = this.currentNode.content.trim()\n      this.saveNode()\n    }\n    this.currentNode = this.currentNode.parent\n  }\n\n  setSelfClosing () {\n    this.setState(TagState.Closed)\n    this.removeEmptyAttrs()\n    this.saveNode()\n  }\n\n  setState (state: TagState) {\n    this.currentNode.state = state\n  }\n\n  setRoot () {\n    this.currentNode = { tag: '' }\n    this.currentNode.parent = { tag: 'ROOT', state: TagState.Opened }\n    this.setState(TagState.Opening)\n  }\n\n  setChild ({ asTextNode }: { asTextNode?: boolean }) {\n    const parent = this.currentNode\n    this.currentNode = asTextNode\n      ? {\n          state: TagState.Opened,\n          tag: 'text',\n          content: this.buffer.replace('\\n', ''),\n          parent\n        }\n      : { state: TagState.Opening, tag: '', parent }\n  }\n\n  saveNode () {\n    this.currentNode.id = uid()\n    this.nodes.push(this.currentNode)\n    const p = this.currentNode.parent\n    p.children?.length\n      ? p.children.push(this.currentNode)\n      : (p.children = [this.currentNode])\n  }\n}\n","import {\n  HANDLERS,\n  CLICK,\n  EACH,\n  IF,\n  ROUTE,\n  Options,\n  Attribute,\n  ROUTER\n} from './types'\nimport { uid } from './utils'\n\nexport class Render {\n  el = null\n  node = null\n  index = 0\n\n  constructor (\n    public Reflection,\n    public nodes,\n    public component,\n    public root,\n    public options: Options = {}\n  ) {\n    while (this.index < this.nodes.length) {\n      this.node = this.nodes[this.index]\n      if (this.isConditional) this.setIf()\n      options.update ? this.update() : this.create()\n      this.index++\n    }\n  }\n\n  create (opts = {}) {\n    if (this.node.hidden) return\n\n    this.node.tag === 'text' ? this.createTextNode() : this.createElement()\n    if (!this.isEach && !this.node.hidden) this.append(opts)\n    if (this.isComponent) return this.createComponent()\n  }\n\n  update () {\n    this.el = document.querySelector(`[data-ref=\"${this.node.id}\"]`)\n    const isText = this.node.tag === 'text'\n\n    if (this.node.hidden) {\n      if (this.el) {\n        this.parentEl.removeChild(this.el)\n      } else {\n        return\n      }\n    } else {\n      if (!this.el && !isText) return this.recreate()\n    }\n\n    if (isText) {\n      this.updateTextNode()\n    } else {\n      this.setAttributes()\n    }\n    if (this.isComponent) this.updateComponent()\n  }\n\n  recreate () {\n    if (!this.node.conditionalRoot) return this.create()\n    // we need to append in the right order\n    const index = this.node.parent.children.findIndex(\n      i => i.id === this.node.id\n    )\n\n    this.create({ insertBefore: { position: index } })\n  }\n\n  createElement () {\n    this.el = document.createElement(this.node.tag)\n    this.setRef()\n    this.setAttributes()\n  }\n\n  createTextNode () {\n    this.el = document.createTextNode(this.interpolatedContent())\n  }\n\n  createComponent () {\n    if (this.node.tag === ROUTER) {\n      this.mountRoutedComponent()\n    } else {\n      const Component = this.component.components[this.node.tag]\n      const instance = new this.Reflection()\n      instance.mount(Component, `[data-ref=\"${this.node.id}\"]`, this.node.props)\n      this.node.component = instance.proxy\n    }\n  }\n\n  updateComponent () {\n    if (this.options.prop in this.component.props) {\n      //  update props\n      this.node.component[this.options.prop] = this.component[this.options.prop]\n    }\n    if (this.options.prop === ROUTER.toLowerCase()) {\n      console.log(\"we've re-routed\")\n      // dispose old component\n      this.node.instance.dispose()\n      // render new route\n      this.mountRoutedComponent()\n    }\n  }\n\n  mountRoutedComponent () {\n    this.trackDependency(ROUTER.toLowerCase())\n    const Component = this.component.router.currentComponent\n    const instance = new this.Reflection()\n    console.log(this.component.router)\n    instance.mount(Component, `[data-ref=\"${this.node.id}\"]`, this.node.props)\n    this.node.component = instance.proxy\n    this.node.instance = instance\n  }\n\n  updateTextNode () {\n    let foundText = false\n    for (let n of this.parentEl.childNodes) {\n      if (\n        n.nodeName === '#text' &&\n        n.nodeValue.includes(this.node.interpolatedContent)\n      ) {\n        foundText = true\n        n.nodeValue = this.interpolatedContent()\n      }\n    }\n    if (!foundText) {\n      // this is necessary because of \"if\" statements\n      this.createTextNode()\n      this.append()\n    }\n  }\n\n  interpolatedContent () {\n    return (this.node.interpolatedContent = this.textContent(this.node.content))\n  }\n\n  setAttributes () {\n    this.node?.attributes?.forEach((attr: Attribute) => {\n      if (attr.key === ROUTE) return this.setRouteLink(attr)\n\n      if (HANDLERS.includes(attr.key)) return this.setHandler(attr)\n\n      const bindings = this.bindMatches(attr.value)\n      if (bindings) return this.setAttrBinding(attr, bindings)\n\n      this.el?.setAttribute(attr.key, attr.value)\n      if (this.isComponent) this.setProp(attr)\n    })\n  }\n\n  setRouteLink ({ key, value }) {\n    const [path, component] = this.component.router.routes.find(\n      r => r[0] === value\n    )\n    this.el?.setAttribute(key, value)\n    this.el?.setAttribute('href', path)\n    this.node.routeTo = component\n    const handler = e => {\n      e.preventDefault()\n      const router = this.component.router\n      router.currentPath = path\n      this.component.router = router // force reassignment so proxy picks up update\n    }\n    this.addListener(CLICK, handler)\n  }\n\n  setProp ({ key, value }) {\n    const prop = { [key]: value }\n    const props = this.node.props\n    const parent = this.component\n    this.node.props = props ? { ...props, ...prop } : { ...prop, parent }\n  }\n\n  setAttrBinding (attr: Attribute, bindings) {\n    if (!this.el) return // because we are re-building \"each\" nodes instead of updating, we have to avoid this\n\n    const prop = this.unwrapMatch(bindings[0])\n    this.trackDependency(prop)\n    this.el.setAttribute(attr.key, this.component[prop])\n    if (this.isComponent)\n      this.setProp({ key: attr.key, value: this.component[prop] })\n  }\n\n  setHandler (attr: Attribute) {\n    if (attr.key === EACH) return this.setEach(attr)\n\n    const [handlerType, handler] = this.deriveHandler(attr)\n    this.addListener(handlerType, handler)\n    if (this.isComponent) this.setProp({ key: attr.key, value: handler })\n  }\n\n  deriveHandler ({ key, value }) {\n    const val = this.unwrapMatch(value)\n    const handler = this.component[val].bind(this.component)\n    const handlerType = HANDLERS.find(i => i === key)\n    return [handlerType, handler]\n  }\n\n  addListener (handlerType, handler) {\n    if (!this.node.listeners) this.node.listeners = {}\n    const existing = this.node.listeners[handlerType]\n    if (!existing) {\n      this.el.addEventListener(handlerType, handler, false)\n      this.node.listeners[handlerType] = true\n    }\n  }\n\n  append (opts: { insertBefore?: { position: number } } = {}) {\n    if (this.node.parent?.id) {\n      opts.insertBefore\n        ? this.appendBefore(opts.insertBefore.position)\n        : this.parentEl.appendChild(this.el)\n    } else if (this.root) {\n      this.root.appendChild(this.el)\n    }\n  }\n\n  appendBefore (position) {\n    const nodes = this.node.parent.children\n    const findNextSibling = (index: number) => {\n      index += 1\n      if (index - 2 > nodes.length) return null // no next sibling\n\n      const id = nodes[index].id\n      const el = document.querySelector(`[data-ref=\"${id}\"]`)\n      return el ? el : findNextSibling(index)\n    }\n    const element = findNextSibling(position)\n    element\n      ? this.parentEl.insertBefore(this.el, element)\n      : this.parentEl.appendChild(this.el)\n  }\n\n  textContent (content) {\n    const bindings = this.bindMatches(content)\n    if (!bindings) return content\n    bindings.forEach(bound => {\n      const prop = this.unwrapMatch(bound)\n      this.trackDependency(prop)\n      content = content.replace(bound, this.deriveBound(prop))\n    })\n    return content\n  }\n\n  deriveBound (propOrExpression: string) {\n    return propOrExpression in this.component\n      ? this.component[propOrExpression]\n      : this.evaluate(propOrExpression)\n  }\n\n  evaluate (expression: string) {\n    if (this.node.eachProps) {\n      const { indexVar, itemVar, prop, index } = this.node.eachProps\n      let func = new Function(\n        `${itemVar}`,\n        `${indexVar}`,\n        `return ${expression}`\n      )\n      return func(this.component[prop][index], index)\n    } else {\n      let func = new Function(\n        ...Object.keys(this.component),\n        `return ${expression}`\n      )\n      return func(...Object.values(this.component))\n    }\n  }\n\n  bindMatches (str: string) {\n    // returns array of matches including the braces\n    return str.match(/\\{([^}]+)\\}/g)\n  }\n\n  unwrapMatch (str: string) {\n    // unwraps from curly braces\n    return str.replace(/[{}]/g, '')\n  }\n\n  trackDependency (propOrExpression: string) {\n    const addDep = prop => {\n      this.node.tracks\n        ? this.node.tracks.add(prop)\n        : (this.node.tracks = new Set([prop]))\n    }\n\n    if (propOrExpression in this.component) return addDep(propOrExpression)\n\n    Object.keys(this.component).forEach(prop => {\n      // still not perfect but less error-prone than regex solution\n      if (propOrExpression.includes(prop)) addDep(prop)\n    })\n  }\n\n  setRef () {\n    this.el.setAttribute('data-ref', this.node.id)\n  }\n\n  setIf () {\n    const { value } = (this.node.attributes || []).find(a => a.key === IF)\n    const val = this.unwrapMatch(value)\n    this.node.conditionalRoot = true\n    this.node.hidden = !this.deriveBound(val)\n    this.trackDependency(val)\n    this.node.children.forEach(n => {\n      n.hidden = this.node.hidden\n      n.tracks ? n.tracks.add(val) : (n.tracks = new Set([val]))\n    })\n  }\n\n  setEach (attr: Attribute) {\n    const val = this.unwrapMatch(attr.value) // accept either bracewrap or not\n    const eachArgs = val.replace(/\\s+/g, '').split(/as|,/)\n    const [prop, ..._] = eachArgs\n    // create each node iterations\n    const nodes = this.component[prop].reduce((memo, _, index) => {\n      const node = this.cloneEachNode(eachArgs, index)\n      memo = [...memo, node, ...node.children]\n      return memo\n    }, [])\n\n    // TODO: update each efficiently instead of re-rendering the entire list\n    this.parentEl.innerHTML = '' // hack to flush each nodes until we have proper updating\n    // When we 'update' this is completly rebuilding the 'each' nodes and children instead of updating the existing ones.\n    // Will need to do something more efficient later\n    new Render(this.Reflection, nodes, this.component, null)\n\n    this.index = this.index + this.node.children.length // fast-forward to next node after each decendants\n    this.trackDependency(prop)\n  }\n\n  get isEach () {\n    return this.node.attributes?.map(n => n.key)?.includes(EACH)\n  }\n\n  get isConditional () {\n    return (this.node.attributes || []).map(a => a.key).includes(IF)\n  }\n\n  cloneEachNode (eachProps, index) {\n    const id = uid()\n    const attributes = this.node.attributes.filter(n => n.key !== EACH)\n    const node = { ...this.node, id, attributes }\n    this.setEachProps(node, eachProps, index)\n    node.children = node.children.map(child => {\n      this.setEachProps(child, eachProps, index)\n      return {\n        ...child,\n        id: uid(),\n        parent: node\n      }\n    })\n    return node\n  }\n\n  setEachProps (node, [prop, itemVar, indexVar], index) {\n    node.eachProps = { prop, itemVar, indexVar, index }\n  }\n\n  get parentEl () {\n    return document.querySelector(`[data-ref=\"${this.node.parent.id}\"]`)\n  }\n\n  get prevNode () {\n    return this.nodes[this.index - 1]\n  }\n\n  get components () {\n    const obj = this.component?.components || {}\n    return Object.keys(obj)\n  }\n\n  get isComponent () {\n    return this.components.includes(this.node.tag) || this.node.tag === ROUTER\n  }\n}\n","export type Route = [string, typeof Function]\n\nexport class Router {\n  currentPath: string = '/'\n  constructor (public routes: Route[]) {}\n\n  get currentComponent () {\n    const [_, c] = this.routes.find(\n      ([path, component]) => this.currentPath === path\n    )\n    return c\n  }\n}\n","import { TemplateParse } from './template_parse'\nimport { Render } from './render'\nexport { Router } from './router'\n\nexport default class Reflection {\n  root = null\n  nodes = []\n  component = null\n  proxy = null\n  router = null\n\n  mount (Component, element, props = {}) {\n    this.root = document.querySelector(element)\n    this.createComponent(Component, props)\n    this.nodes = new TemplateParse(this.component.template).nodes\n    this.component.router = this.router\n    this.component.props = props\n    this.observe()\n    new Render(Reflection, this.nodes, this.proxy, this.root)\n    this.proxy.onMount && this.proxy.onMount()\n  }\n\n  dispose () {\n    this.proxy.onDispose && this.proxy.onDispose()\n    this.root.textContent = ''\n    this.nodes = null\n    this.component = null\n    this.proxy = null\n  }\n\n  observe () {\n    const update = this.update.bind(this)\n    this.proxy = new Proxy(this.component, {\n      set (obj, prop, val, receiver) {\n        obj[prop] = val\n        update(prop, receiver)\n        return true\n      }\n    })\n  }\n\n  update (prop, receiver) {\n    console.log('update', String(prop), receiver[prop])\n    const nodes = this.nodes.filter(n => n.tracks?.has(prop))\n    console.log(nodes)\n    new Render(Reflection, nodes, this.proxy, this.root, {\n      update: true,\n      prop\n    })\n    // find all elements that track the prop as a dependency and update them\n    // in the case of \"if\" we need to create a new elements, or remove them\n  }\n\n  createComponent (Component, props) {\n    this.component = new Component(props)\n    Object.entries(props).forEach(([k, v]) => {\n      // add props if not undefined\n      if (typeof v === 'function') v = (v as Function).bind(props.parent)\n      if (typeof v !== 'undefined') this.component[k] = v\n    })\n  }\n}\n","\n  export default class Layout {\n  template = \"<main>\\n  <h1>Layout: {msg}</h1>\\n  <div>\\n    <a route=\\\"/\\\">Home page</a>\\n    <br />\\n    <a route=\\\"/about\\\">About page</a>\\n  </div>\\n  <Router></Router>\\n</main>\\n\\n\\n\"\n    msg = 'layout'\n  }\n","\n  export default class Home {\n  template = \"<main>\\n  <h1>HOME: {msg}</h1>\\n</main>\\n\\n\\n\"\n    msg = 'home'\n  }\n","\n  export default class About {\n  template = \"<main>\\n  <h1>ABOUT</h1>\\n</main>\\n\\n\\n\"\n    msg = 'about'\n  }\n","import Home from './home.reflect'\nimport About from './about.reflect'\nimport { Router } from './lib/reflection'\n\nexport const router = new Router([\n  ['/', Home],\n  ['/about', About]\n])\n","import Reflection from './lib/reflection'\nimport Layout from './layout.reflect'\nimport { router } from './router.js'\n\nconst app = new Reflection()\n\napp.router = router\napp.mount(Layout, '#app', { myProp: 'Test Prop' })\n"],"names":[],"mappings":"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"}