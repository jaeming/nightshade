<div>
  <p>I am a child component now:</p>
  <p>a prop: {foo}</p>
  <p>prop count: {count}, {num}</p>
  <small>another prop: *{hi}*</small>
  <button click="{increase}">increase num</button>
  <!-- <this> <hr /> is a comment -->
  <button click="{increment}">increment parent's count</button>
  <p>good bye from child now...</p>
</div>

<script>
  export default class Child {
    count = 0
    num = 5
    foo = 'backup' // default value for prop if undefined

    // increment
    // ^ note you don't have to declare the prop if you don't need it for type-checking.

    constructor () {
      // note constructor is not reactive
      // Will likely have a dedicated lifecycle hook for mounted anyway
      this.greet()
    }

    greet () {
      this.count = 2
      this.hi = 'bye'
      console.log(
        'prop is available on instance by default',
        this.hi,
        this.count
      )
      this.num += 100
      this.increase()
    }

    increase () {
      this.num += 1
      this.count += 5
    }
  }
</script>
